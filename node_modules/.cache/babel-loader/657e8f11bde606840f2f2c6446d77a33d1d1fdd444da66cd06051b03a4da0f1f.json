{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samtu\\\\react-course\\\\react-router-adv\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    console.log(data.message);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"data.message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const loader = async () => {\n  const response = await fetch('http://localhost:8080/eventsxx');\n  if (!response.ok) {\n    //todo  setError('Fetching events failed.');\n  } else {\n    return response;\n    ;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["C:/Users/samtu/react-course/react-router-adv/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n\r\n    if (data.isError) {\r\n        console.log(data.message);\r\n        return <p>data.message</p>;\r\n    }\r\n\r\n    const events = data.events;\r\n\r\n    return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport const loader = async () => {\r\n    const response = await fetch('http://localhost:8080/eventsxx');\r\n\r\n    if (!response.ok) {\r\n        //todo  setError('Fetching events failed.');\r\n    } else {\r\n        return response;;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,IAAIM,IAAI,CAACC,OAAO,EAAE;IACdC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;IACzB,oBAAOP,OAAA;MAAAQ,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B;EAEA,MAAMC,MAAM,GAAGV,IAAI,CAACU,MAAM;EAE1B,oBAAOb,OAAA,CAACF,UAAU;IAACe,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACV,EAAA,CAXQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAiB,EAAA,GADrBb,UAAU;AAanB,eAAeA,UAAU;AAEzB,OAAO,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;EAE9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;EAAA,CACH,MAAM;IACH,OAAOF,QAAQ;IAAC;EACpB;AACJ,CAAC;AAAA,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}