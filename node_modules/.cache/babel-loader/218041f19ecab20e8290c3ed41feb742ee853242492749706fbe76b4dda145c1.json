{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samtu\\\\react-course\\\\react-router-adv\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, Link } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: 'todo'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events 500?.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","Link","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["C:/Users/samtu/react-course/react-router-adv/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, Link } from 'react-router-dom';\r\nimport EventItem from '../components/EventItem';\r\nconst EventDetailPage = () => {\r\n    const params = useParams();\r\n    return (\r\n        <EventItem event={'todo' } />\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n    const id = params.eventId\r\n    const response = await fetch('http://localhost:8080/events/' + id)\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events 500?.' }),\r\n            {\r\n                status: 500,\r\n            });\r\n\r\n    } else {\r\n        return response;\r\n    }\r\n};  "],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,oBACII,OAAA,CAACF,SAAS;IAACM,KAAK,EAAE;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAKrC,CAAC;AAAAN,EAAA,CARKD,eAAe;EAAA,QACFL,SAAS;AAAA;AAAAa,EAAA,GADtBR,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,MAAMS,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAER;AAAO,CAAC,KAAK;EACjD,MAAMS,EAAE,GAAGT,MAAM,CAACU,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,EAC1E;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EAEV,CAAC,MAAM;IACH,OAAOP,QAAQ;EACnB;AACJ,CAAC;AAAC,IAAAL,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}