{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samtu\\\\react-course\\\\react-router-adv\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events 500?.'\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const loader = () => {\n  return {\n    events: loadEvents()\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","Response","JSON","stringify","message","status","loader","$RefreshReg$"],"sources":["C:/Users/samtu/react-course/react-router-adv/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, Await } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const { events } = useLoaderData();\r\n    return <Await resolve={events} ></Await>\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nconst loadEvents = async () => {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events 500?.' }),\r\n            {\r\n                status: 500,\r\n            });\r\n\r\n    } else {\r\n        return response;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loader = () => {\r\n    return {\r\n        events: loadEvents()\r\n    };\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AAEvD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,CAAC,CAAC;EAClC,oBAAOI,OAAA,CAACH,KAAK;IAACO,OAAO,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC5C;AAACN,EAAA,CAHQD,UAAU;EAAA,QACIL,aAAa;AAAA;AAAAa,EAAA,GAD3BR,UAAU;AAKnB,eAAeA,UAAU;AAEzB,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAEd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,EAC1E;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EAEV,CAAC,MAAM;IACH,OAAOP,QAAQ;EACnB;AAGJ,CAAC;AAGD,OAAO,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EACxB,OAAO;IACHhB,MAAM,EAAEO,UAAU,CAAC;EACvB,CAAC;AAEL,CAAC;AAAA,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}