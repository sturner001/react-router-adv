{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samtu\\\\react-course\\\\react-router-adv\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, redirect } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this)\n  //<EventsList events={} />\n  ;\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nconst loadEvent = async id => {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events 500?.'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events 500?.'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  return {\n    event: loadEvent(id),\n    events: loadEvents()\n  };\n};\nexport const action = async ({\n  request,\n  params\n}) => {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not delete event.'\n    }), {\n      status: 500\n    });\n  } else {\n    return redirect('/events');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","redirect","EventItem","EventsList","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","events","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/samtu/react-course/react-router-adv/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, redirect } from 'react-router-dom';\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from '../components/EventsList';\r\n\r\n\r\n\r\nconst EventDetailPage = () => {\r\n    const data = useRouteLoaderData('event-detail');\r\n\r\n    return (\r\n        <EventItem event={data.event} />\r\n        //<EventsList events={} />\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nconst loadEvent = async (id) => {\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events 500?.' }),\r\n            {\r\n                status: 500,\r\n            });\r\n\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.event;\r\n    }\r\n\r\n}\r\n\r\nconst loadEvents = async () => {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events 500?.' }),\r\n            {\r\n                status: 500,\r\n            });\r\n\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}\r\n\r\nexport const loader = async ({ request, params }) => {\r\n    const id = params.eventId;\r\n    return ({\r\n        event: loadEvent(id),\r\n        events: loadEvents()\r\n    });\r\n};\r\n\r\nexport const action = async ({ request, params }) => {\r\n    const eventId = params.eventId;\r\n\r\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\r\n        method: request.method,\r\n    });\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not delete event.' }),\r\n            {\r\n                status: 500,\r\n            });\r\n\r\n    } else {\r\n        return redirect('/events');\r\n    }\r\n\r\n} "],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,QAAQ,QAAQ,kBAAkB;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACIK,OAAA,CAACH,SAAS;IAACO,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;EAC/B;EAAA;AAER,CAAC;AAAAN,EAAA,CAPKD,eAAe;EAAA,QACJN,kBAAkB;AAAA;AAAAc,EAAA,GAD7BR,eAAe;AASrB,eAAeA,eAAe;AAE9B,MAAMS,SAAS,GAAG,MAAOC,EAAE,IAAK;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAClE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,EAC1E;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EAEV,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAAChB,KAAK;EACxB;AAEJ,CAAC;AAED,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAEd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,EAC1E;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EAEV,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACG,MAAM;EACzB;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACjD,MAAMf,EAAE,GAAGe,MAAM,CAACC,OAAO;EACzB,OAAQ;IACJvB,KAAK,EAAEM,SAAS,CAACC,EAAE,CAAC;IACpBY,MAAM,EAAED,UAAU,CAAC;EACvB,CAAC;AACL,CAAC;AAED,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAO;EAAEH,OAAO;EAAEC;AAAO,CAAC,KAAK;EACjD,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO;EAE9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGc,OAAO,EAAE;IACpEE,MAAM,EAAEJ,OAAO,CAACI;EACpB,CAAC,CAAC;EACF,IAAI,CAACjB,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EACrE;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EAEV,CAAC,MAAM;IACH,OAAOvB,QAAQ,CAAC,SAAS,CAAC;EAC9B;AAEJ,CAAC;AAAA,IAAAa,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}